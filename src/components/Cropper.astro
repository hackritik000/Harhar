---
import "cropperjs/dist/cropper.css";
---

<div class="imgBox" id="imgBox">
  <label id="profilelabel" for="profileImg">
    <img id="previewImg" src="./profile.png" alt="" />
  </label>
  <input id="profileImg" type="file" accept="image/*" />
</div>

<div class="cropperBox" id="cropperBox">
  <div>
    <div>
      <div class="preview"></div>
      <div class="divPreviewImg"></div>

      <!-- Button to Crop the Image -->
      <button id="crop-btn">Crop Image</button>
    </div>

    <!-- Canvas to Display the Cropped Image -->
    <div>
      <h3>Cropped Image:</h3>
      <img id="croppedImage" alt="Cropped Image" />
    </div>
  </div>
</div>

<style lang="scss">
  .imgBox {
    border: 3px solid red;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    label {
      display: block;
      height: 100%;
      width: 100%;
      img {
        display: block;
        width: 100%;
        height: 100%;
        cursor: pointer;
      }
    }
    input {
      display: none;
      position: absolute;
    }
  }

  .cropperBox {
    display: none;

    border: 3px solid darkblue;
    position: absolute;
    width: 80%;
    height: 80%;
    overflow-y: scroll;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background-color: aquamarine;
    z-index: 10;
    & > div {
      display: flex;
      position: relative;
      width: 100%;
    }
    .preview {
      border-radius: 50%;
      overflow: hidden;
      width: 200px; /* Set width and height */
      height: 200px;
    }
  }
</style>
<style is:global>
  .previewImg {
    display: block;
    max-width: 100%;
  }
</style>

<script>
  import Cropper from "cropperjs";

  let cropper: Cropper;

  const cropBtn = document.querySelector("#crop-btn") as HTMLButtonElement;

  cropBtn.addEventListener("click", cropImage);
  function initializeCropper() {
    const image = document.querySelector(".previewImg") as HTMLImageElement;

    cropper = new Cropper(image, {
      aspectRatio: 1,
      viewMode: 1,
      preview: ".preview",

      crop(event) {
        console.log(event.detail.x);
        console.log(event.detail.y);
      },
    });
  }


  // image upload code
  const cropperBox = document.getElementById("cropperBox") as HTMLDivElement;
  const imageBox = document.getElementById("imgBox") as HTMLDivElement;

  function cropImage(e: Event) {
    if (cropper) {
      e.preventDefault();
      const croppedCanvas = cropper.getCroppedCanvas();
      const croppedImage = document.getElementById(
        "previewImg",
      ) as HTMLImageElement;
      croppedImage.src = croppedCanvas.toDataURL();
          cropperBox.style.display = "none";
    }
  }
  const inputImg = document
    .getElementById("profileImg")
    ?.addEventListener("change", (event: Event) => {
      console.log(event, "hi this is karan");
      const inputElement = event.target as HTMLInputElement;
      const file: File | null = inputElement?.files
        ? inputElement.files[0]
        : null;

      console.warn("File....", file);

      const imgLink = URL.createObjectURL(file);
      console.error(".....", imgLink);

      if (imgLink) {
        const imgElement = document.createElement("img") as HTMLImageElement;

        const divPreviewImg = document.querySelector(".divPreviewImg");
        imgElement.src = "";
        imgElement.src = imgLink;
        imgElement.className = "previewImg";
        divPreviewImg?.append(imgElement);
        if (cropperBox && cropperBox.style) {
          cropperBox.style.display = "block";
        }
        console.log("hi");
        initializeCropper();
        console.log("hi");
      }
    });
</script>
